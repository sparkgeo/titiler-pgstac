services:
  stac-fastapi-pgstac:
    image: ghcr.io/stac-utils/stac-fastapi-pgstac:5.0.2
    platform: linux/amd64
    ports:
      - "8084:8084" 
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8084
      - RELOAD=true
      - ENVIRONMENT=production
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DB=postgis
      - POSTGRES_HOST=database
      - POSTGRES_DBNAME=postgis
      - POSTGRES_PORT=5432
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      - USE_API_HYDRATE=${USE_API_HYDRATE:-false}
    depends_on:
      - database
    # command: uvicorn stac_fastapi.pgstac.app:app --host $APP_HOST --port $APP_PORT"
    command: ["uvicorn", "stac_fastapi.pgstac.app:app", "--host", "0.0.0.0", "--port", "8084", "--workers", "1", "--log-level", "debug"]
  tiler:
    container_name: tiler-pgstac
    # At the time of writing, rasterio and psycopg wheels are not available for arm64 arch
    # so we force the image to be built with linux/amd64
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    command: ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "titiler.pgstac.main:app", "--bind", "0.0.0.0:8081", "--workers", "1"]
    environment:
      # Postgres connection
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      # PG connection
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
      # - DB_MAX_QUERIES=10
      # - DB_MAX_IDLE=10
      # GDAL Config
      # This option controls the default GDAL raster block cache size.
      # If its value is small (less than 100000), it is assumed to be measured in megabytes, otherwise in bytes.
      - GDAL_CACHEMAX=200
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      # The file can be cached in RAM by setting the configuration option VSI_CACHE to TRUE.
      # The cache size defaults to 25 MB, but can be modified by setting the configuration option VSI_CACHE_SIZE (in bytes).
      # Content in that cache is discarded when the file handle is closed.
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      # In addition, a global least-recently-used cache of 16 MB shared among all downloaded content is enabled by default,
      # and content in it may be reused after a file handle has been closed and reopen,
      # during the life-time of the process or until VSICurlClearCache() is called.
      # Starting with GDAL 2.3, the size of this global LRU cache can be modified by
      # setting the configuration option CPL_VSIL_CURL_CACHE_SIZE (in bytes).
      - CPL_VSIL_CURL_CACHE_SIZE=200000000
      # TiTiler Config
      - MOSAIC_CONCURRENCY=5
      # AWS S3 endpoint config
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
      - TITILER_API_DEBUG=TRUE
      - TITILER_PGSTAC_API_DEBUG=TRUE
      - TITILER_PGSTAC_API_ENABLE_ASSETS_ENPOINTS=TRUE
      - TITILER_PGSTAC_API_ENABLE_EXTERNAL_DATASET_ENDPOINTS=TRUE
    volumes:
      - ./benchmark:/tmp/benchmark
    depends_on:
      - database

  tiler-uvicorn:
    container_name: tiler-pgstac-uvicorn
    extends:
      service: tiler
    ports:
      - "8083:8083"
    command: ["uvicorn", "titiler.pgstac.main:app", "--host", "0.0.0.0", "--port", "8083", "--workers", "5", "--log-level", "debug"]

  nginx:
    image: nginx
    ports:
      - 8080:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app-nginx
    command: [ "nginx-debug", "-g", "daemon off;" ]

  app-nginx:
    extends:
      service: tiler
    command: bash -c "uvicorn titiler.pgstac.main:app --host 0.0.0.0 --port 8082 --proxy-headers --forwarded-allow-ips='*' --root-path=/api/v1/titiler"

  database:
    container_name: stac-db
    image: ghcr.io/stac-utils/pgstac:v0.7.10
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGDATABASE=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500
    volumes:
      - ./.pgdata:/var/lib/postgresql/data

  pgstac-migrator:
    image: ghcr.io/stac-utils/pgstac-pypgstac:v0.9.6
    environment:
      # Postgres connection
      - PGUSER=username
      - PGPASSWORD=password
      - PGDATABASE=postgis
      - PGHOST=database
      - PGPORT=5432

networks:
  default:
    name: titiler-pgstac-network
